// This file been auto generated by the superbuild pipeline and the QuakeToC tool.
// Please do NOT modify this file. Instead please open the .qc files, and make changes there.
// This auto generated file is released under the GPL license, please see code_license.txt
// 

#pragma once

__forceinline void CG_RegisterWeapon( int weaponNum ) {
	weaponInfo_t	*weaponInfo;
	weaponInfo = &cg_weapons[weaponNum];
	if ( weaponNum == 0 ) { return; }
	if ( weaponInfo->registered ) { return; }
	memset( weaponInfo, 0, sizeof( *weaponInfo ) );
	weaponInfo->registered = qtrue;
	weaponInfo->loopFireSound = qfalse;
	weaponInfo->animations[WEAPON_ANIMATION_NONE].startFrame = -1;
	weaponInfo->animations[WEAPON_ANIMATION_NONE].endFrame = -1;
	switch (weaponNum) {
		case WEAPON_MIGHTYFOOT:
			MAKERGB(weaponInfo->flashDlightColor, 1, 1, 0);
			weaponInfo->weaponModel = engine->renderer->RegisterModel("models/weapons/mightyfoot/mightyfoot.md3");
			weaponInfo->flashSound[0] = engine->S_RegisterSound("");
			VectorSet(weaponInfo->weapon_offset, 12, 4, -13);
			weaponInfo->animations[WEAPON_ANIMATION_IDLE].startFrame = 26;
			weaponInfo->animations[WEAPON_ANIMATION_IDLE].endFrame = 46;
			weaponInfo->animations[WEAPON_ANIMATION_FIRE].startFrame = 0;
			weaponInfo->animations[WEAPON_ANIMATION_FIRE].endFrame = 0;
		break;
		case WEAPON_PISTOL:
			MAKERGB(weaponInfo->flashDlightColor, 1, 1, 0);
			weaponInfo->weaponModel = engine->renderer->RegisterModel("models/weapons/pistol/pistol.md3");
			weaponInfo->flashSound[0] = engine->S_RegisterSound("sound/weapons/guncock.wav");
			VectorSet(weaponInfo->weapon_offset, 12, 4, -13);
			weaponInfo->animations[WEAPON_ANIMATION_IDLE].startFrame = 113;
			weaponInfo->animations[WEAPON_ANIMATION_IDLE].endFrame = 113;
			weaponInfo->animations[WEAPON_ANIMATION_FIRE].startFrame = 0;
			weaponInfo->animations[WEAPON_ANIMATION_FIRE].endFrame = 8;
		break;
		case WEAPON_RPG:
			MAKERGB(weaponInfo->flashDlightColor, 1, 1, 0);
			weaponInfo->weaponModel = engine->renderer->RegisterModel("models/weapons/rpg/r.md3");
			weaponInfo->flashSound[0] = engine->S_RegisterSound("sound/weapons/guncock.wav");
			VectorSet(weaponInfo->weapon_offset, 12, 4, -13);
			weaponInfo->animations[WEAPON_ANIMATION_IDLE].startFrame = 119;
			weaponInfo->animations[WEAPON_ANIMATION_IDLE].endFrame = 119;
			weaponInfo->animations[WEAPON_ANIMATION_FIRE].startFrame = 120;
			weaponInfo->animations[WEAPON_ANIMATION_FIRE].endFrame = 154;
		break;
		case WEAPON_SHOTGUN:
			MAKERGB(weaponInfo->flashDlightColor, 1, 1, 0);
			weaponInfo->weaponModel = engine->renderer->RegisterModel("models/weapons/shotgun/shotgun.md3");
			weaponInfo->flashSound[0] = engine->S_RegisterSound("sound/weapons/guncock.wav");
			VectorSet(weaponInfo->weapon_offset, -10, 4, -8);
			weaponInfo->animations[WEAPON_ANIMATION_IDLE].startFrame = 0;
			weaponInfo->animations[WEAPON_ANIMATION_IDLE].endFrame = 0;
			weaponInfo->animations[WEAPON_ANIMATION_FIRE].startFrame = 122;
			weaponInfo->animations[WEAPON_ANIMATION_FIRE].endFrame = 148;
		break;
	};
}
